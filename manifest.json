{
  "author": "Human Connectome Project",
  "cite": "(1) G. Salimi-Khorshidi, G. Douaud, C.F. Beckmann, M.F. Glasser, L. Griffanti S.M. Smith. Automatic denoising of functional MRI data: Combining independent component analysis and hierarchical fusion of classifiers. NeuroImage, 90:449-68, 2014 (2) L. Griffanti, G. Salimi-Khorshidi, C.F. Beckmann, E.J. Auerbach, G. Douaud, C.E. Sexton, E. Zsoldos, K. Ebmeier, N. Filippini, C.E. Mackay, S. Moeller, J.G. Xu, E. Yacoub, G. Baselli, K. Ugurbil, K.L. Miller, and S.M. Smith. ICA-based artefact removal and accelerated fMRI acquisition for improved resting state network imaging. NeuroImage, 95:232-47, 2014",
  "config": {
    "FIXClassifier": {
      "default": "HCP_hp2000",
      "description": "Name of FIX training file to use for classification. 'Standard', 'HCP_hp2000', 'HCP7T_hp2000', 'WhII_MB6', 'WhII_Standard', 'UKBiobank'. See https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FIX/UserGuide#Trained-weights_files for details.",
      "type": "string"
    },
    "HighPassFilter": {
      "default": 2000,
      "description": "Cutoff of temporal highpass full-width (2*sigma) in seconds",
      "type": "integer"
    },
    "PreserveOnError": {
      "default": false,
      "description": "By default, on error only log files are preserved. If this option is set to true then all intermediate processing is preserved on exit. Warning - outputs may be extensive!",
      "type": "boolean"
    },
    "RegName": {
      "default": "Empty",
      "description": "Surface registration to use during CIFTI resampling: either 'FS' (freesurfer) or 'MSMSulc'. ('Empty'=gear uses RegName from HCP-Structural )",
      "type": "string"
    }
  },
  "custom": {
    "docker-image": "flywheel/hcp-icafix:0.2.1",
    "flywheel": {
      "suite": "Human Connectome Project"
    }
  },
  "description": "Runs ICA-FIX denoising on functional data preprocessed according to the HCP Minimal Preprocessing Pipeline. This Gear is based on scripts from the v4.0-alpha release of the ICAFIX, PostFix, and RestingStateStats pipelines. NOTE: This Gear requires that HCP-STRUCT and HCP-FUNC Gears have been run, as the outputs of those gears are required inputs here. Also note that more than 1 HCP-FUNC output can be provided as input.",
  "environment": {
    "REQUESTS_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt"
  },
  "flywheel": "0",
  "inputs": {
    "CustomClassifier": {
      "base": "file",
      "description": "User-supplied .RData file for FIX component classification. If provide, pipeline overrides FIXClassifier config param",
      "optional": true
    },
    "FuncZip": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": false,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip10": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip2": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip3": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip4": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip5": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip6": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip7": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip8": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "FuncZip9": {
      "base": "file",
      "description": "Zipped output from HCP-Func pipeline",
      "optional": true,
      "type": {
        "enum": [
          "zip"
        ]
      }
    },
    "StructZip": {
      "base": "file",
      "description": "Zipped output from HCP-Struct pipeline",
      "optional": false,
      "type": {
        "enum": [
          "zip"
        ]
      }
    }
  },
  "label": "HCP: ICAFIX Functional Pipeline",
  "license": "Other",
  "maintainer": "Flywheel <support@flywheel.io>",
  "name": "hcp-icafix",
  "source": "https://github.com/flywheel-apps/hcp-icafix",
  "url": "https://github.com/Washington-University/Pipelines",
  "version": "0.2.1"
}